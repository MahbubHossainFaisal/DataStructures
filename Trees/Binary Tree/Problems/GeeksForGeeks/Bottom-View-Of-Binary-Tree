vector <int> bottomView(Node *root)
{
   
     vector <int> ans;
   if(root == NULL){
       return ans;
   }
   
   map<int,vector<int>> m;
   int hd =0;
   queue<pair<Node* , int>> q;
    q.push(make_pair(root,hd));
    
    while(!q.empty()){
        pair<Node*,int> temp = q.front();
        q.pop();
        Node* node = temp.first;
        hd = temp.second;
        
        m[hd].push_back(node->data);
        
        if(node->left){
            q.push(make_pair(node->left,hd-1));
        }
        if(node->right){
            q.push(make_pair(node->right,hd+1));
        }
    }
    
    
    map<int,vector<int>> :: iterator it;
    
    for(it=m.begin(); it!=m.end();it++){
        
        ans.push_back(it->second[it->second.size()-1]);
    }
   
    return ans;
}
